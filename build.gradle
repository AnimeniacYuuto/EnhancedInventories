import org.apache.tools.ant.filters.ReplaceTokens

buildscript {
    repositories {
        mavenCentral()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:1.2-SNAPSHOT'
    }
}

apply plugin: 'scala'
apply plugin: 'forge'

ext.yuutolibVersion = "1.0.1"

version = "1.7.10-1.1.4"
group= "yuuto.enhancedinventories" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "EnhancedInventories"

minecraft {
    version = "1.7.10-10.13.4.1492-1.7.10"
    runDir = "eclipse"
}

configurations {
    compile.extendsFrom exportedCompile
}

dependencies {
	compile files("libs/CodeChickenCore-1.7.10-1.0.7.46-dev.jar")
	compile files("libs/CodeChickenLib-1.7.10-1.1.3.138-dev.jar")
	compile files("libs/CoFHCore-[1.7.10]3.0.3B2-297-dev.jar")
	compile files("libs/NotEnoughItems-1.7.10-1.0.5.111-dev.jar")
	compile files("libs/RefinedRelocation-1.7.10-1.0.8b-deobf.jar")
	compile files("libs/InventoryTools-1.7.10-1.0.0-dev.jar")
	compile files("libs/YuutoLib-1.7.10-1.0.1-dev.jar")
	compile files("libs/InventoryTweaks-deobf-1.60-dev-17.jar")
	
    // you may put jars on which you depend on in ./libs
    // or you may define them like so..
    //compile "some.group:artifact:version:classifier"
    //compile "some.group:artifact:version"
      
    // real examples
    //compile 'com.mod-buildcraft:buildcraft:6.0.8:dev'  // adds buildcraft to the dev env
    //compile 'com.googlecode.efficient-java-matrix-library:ejml:0.24' // adds ejml to the dev env

    // for more info...
    // http://www.gradle.org/docs/current/userguide/artifact_dependencies_tutorial.html
    // http://www.gradle.org/docs/current/userguide/dependency_management.html

}

processResources
{
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
        include 'dependancies.info'
                
        // replace version and mcversion
        filter(ReplaceTokens, tokens: [VERSION: project.version, MCVERSION: project.minecraft.version, YUUTOLIBVERSION: project.yuutolibVersion])
    }
        
    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
        exclude 'dependancies.info'
    }
}
